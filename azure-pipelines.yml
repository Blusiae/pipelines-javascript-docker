trigger:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest

variables:
  imageName: 'my-container-app'
  acrName: 'ntwdkcontainersacr'
  aksClusterName: 'containers'  # Replace with your AKS cluster name
  resourceGroup: 'containers'  # Replace with your resource group name
  azureServiceConnection: 'DanielKocot'

steps:
  - task: Docker@2
    inputs:
      command: buildAndPush
      repository: $(acrName).azurecr.io/$(imageName)
      dockerfile: $(Build.SourcesDirectory)/app/Dockerfile
      containerRegistry: '$(azureServiceConnection)'
      tags: |
        $(Build.BuildId)

  - task: AzureCLI@2
    inputs:
      azureSubscription: '$(azureServiceConnection)'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        # Get AKS credentials
        az aks get-credentials --resource-group $(resourceGroup) --name $(aksClusterName)

  - task: Kubernetes@1
    inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscriptionEndpoint: '$(azureServiceConnection)'
      azureResourceGroup: '$(resourceGroup)'
      kubernetesCluster: '$(aksClusterName)'
      command: 'create'
      secretName: 'acr-secret'
      dockerRegistryEndpoint: '$(azureServiceConnection)'

  - task: Kubernetes@1
    inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscriptionEndpoint: '$(azureServiceConnection)'
      azureResourceGroup: '$(resourceGroup)'
      kubernetesCluster: '$(aksClusterName)'
      command: 'apply'
      useConfigurationFile: true
      configuration: '$(Build.SourcesDirectory)/manifests/deployment.yaml'
      secretName: 'acr-secret'

  - task: Kubernetes@1
    inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscriptionEndpoint: '$(azureServiceConnection)'
      azureResourceGroup: '$(resourceGroup)'
      kubernetesCluster: '$(aksClusterName)'
      command: 'apply'
      useConfigurationFile: true
      configuration: '$(Build.SourcesDirectory)/manifests/service.yaml'
      secretName: 'acr-secret'
