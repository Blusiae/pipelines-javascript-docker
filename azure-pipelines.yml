trigger:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest

variables:
  imageName: 'my-container-app'
  acrName: 'ntwdkcontainersacr'
  aksClusterName: 'containers'  # Replace with your AKS cluster name
  resourceGroup: 'containers'  # Replace with your resource group name

steps:
  - task: AzureCLI@2
    inputs:
      azureSubscription: 'DanielKocot'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        # Log in to ACR
        az acr login --name $(acrName)
        
        # Build and push Docker image
        docker build -t $(acrName).azurecr.io/$(imageName):$(Build.BuildId) $(Build.SourcesDirectory)/app
        docker push $(acrName).azurecr.io/$(imageName):$(Build.BuildId)
        
        # Get AKS credentials
        az aks get-credentials --resource-group $(resourceGroup) --name $(aksClusterName)
        
        # Create a secret for ACR
        kubectl create secret docker-registry acr-secret --docker-server=$(acrName).azurecr.io --docker-username=$(ACR_USERNAME) --docker-password=$(ACR_PASSWORD) --docker-email=$(ACR_EMAIL)
        
        # Apply Kubernetes manifests
        kubectl apply -f $(Build.SourcesDirectory)/manifests/deployment.yaml
        kubectl apply -f $(Build.SourcesDirectory)/manifests/service.yaml
